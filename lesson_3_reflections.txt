When would you want to use a remote repository rather than keeping all your 
work local?

You would want to use a remote repository if you would like to keep a remote
backup, want to work on your files from a different location/computer or if 
you want to have multiple people working on the same project.


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

You would want to pull changes manually because your remote and local
repositories might be alternate between being the most up-to-date. If your
local repository is most up-to-date, then you wouldn't want to pull
automatically. Instead, you would want to push it.


Describe the differences between forks, clones, and branches. When would you use
one instead of another?

A fork is cloning another person's repository on GitHub. Clone is just copying
an entire repository. Branching is when you want to implement something new
without altering the original, perhaps working, version. You would want to use
fork when you want to make your own changes to somebody else's repository
without affecting their's. You would clone whenever you need a copy. Finally,
you would want to use branch when fixing bugs or implementing new features.


What is the benefit of having a copy of the last known state of the remote
stored locally?

Having a copy of the last known state of the remote stored locally allows to see
whether the remote has been updated. This is useful information when dealing
with new commits locally and remotely that need to be merge to include both.


How would you collaborate without using Git or GitHub? What would be easier and
what would be harder?

You could use other file sharing systems we discussed earlier in the class such
as Google Drive or Dropbox. It would be a lot harder to keep a working version a
master branch maintains. One thing that would be easier is real-time
collaboration of working on the same file, at the same time. 
